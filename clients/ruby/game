#!/usr/bin/env ruby
# frozen_string_literal: true

# Copyright (C) 2020 Marcelo Pereira
# All rights reserved.
#
# This software may be modified and distributed under the terms
# of the BSD license.  See the LICENSE file for details.

require 'thor'
require_relative './engine'

class Game < Thor
  desc "start", "Connects to a game server and starts a match."
  method_option :host, aliases: "-h", desc: "Host where game server is running", default: "127.0.0.1", type: :string
  method_option :port, aliases: "-p", desc: "Port where game server is running", default: 3000, type: :numeric
  method_option :controller, aliases: "-c", desc: "Controller: human (h), AI (a) or AI with debug info (ad)", default: "h", type: :string
  def start
    remote = options[:host]
    port = options[:port]
    controller = options[:controller]
    raise ArgumentError.new("Controller needs to be 'h', 'a' or 'ad'") unless %w(h a ad).include?(controller)
    puts "Connecting to #{remote}:#{port}"
    is_ai = %w(a ad).include?(controller)
    is_debug = controller == 'ad'
    engine = Engine.new(remote, port, is_ai, debug_mode: is_debug)
    Signal.trap("INT") do
      puts 'Terminating'
      engine.finish
    end
    engine.show
    engine.finish
  end
end

Game.start
